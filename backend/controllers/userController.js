const User = require("../models/User");

// ‚úÖ GET /users - L·∫•y danh s√°ch ng∆∞·ªùi d√πng
const getUsers = async (req, res) => {
  try {
    const users = await User.find(); // L·∫•y to√†n b·ªô user t·ª´ MongoDB
    res.json(users);
  } catch (error) {
    res.status(500).json({
      message: "L·ªói khi l·∫•y danh s√°ch ng∆∞·ªùi d√πng",
      error: error.message,
    });
  }
};

// ‚úÖ POST /users - Th√™m ng∆∞·ªùi d√πng m·ªõi
const addUser = async (req, res) => {
  try {
    console.log("üì• req.body nh·∫≠n ƒë∆∞·ª£c:", req.body);

    const { name, email } = req.body || {};

    // Ki·ªÉm tra d·ªØ li·ªáu g·ª≠i l√™n
    if (!name || !email) {
      return res
        .status(400)
        .json({ message: "Vui l√≤ng g·ª≠i JSON c√≥ name v√† email" });
    }

    // T·∫°o user m·ªõi v√† l∆∞u v√†o MongoDB
    const newUser = new User({ name, email });
    await newUser.save();

    res.status(201).json(newUser);
  } catch (error) {
    res.status(500).json({
      message: "L·ªói khi th√™m ng∆∞·ªùi d√πng",
      error: error.message,
    });
  }
};

// ‚úÖ PUT /users/:id - C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng
const updateUser = async (req, res) => {
  try {
    const { id } = req.params;

    // T√¨m v√† c·∫≠p nh·∫≠t user theo id
    const updatedUser = await User.findByIdAndUpdate(id, req.body, {
      new: true, // Tr·∫£ v·ªÅ d·ªØ li·ªáu sau khi c·∫≠p nh·∫≠t
      runValidators: true, // Ki·ªÉm tra validate c·ªßa model
    });

    if (!updatedUser) {
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng" });
    }

    res.json(updatedUser);
  } catch (error) {
    res.status(500).json({
      message: "L·ªói khi c·∫≠p nh·∫≠t ng∆∞·ªùi d√πng",
      error: error.message,
    });
  }
};

// ‚úÖ DELETE /users/:id - X√≥a ng∆∞·ªùi d√πng
const deleteUser = async (req, res) => {
  try {
    const { id } = req.params;

    const deletedUser = await User.findByIdAndDelete(id);

    if (!deletedUser) {
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng" });
    }

    res.json({ message: "ƒê√£ x√≥a ng∆∞·ªùi d√πng th√†nh c√¥ng" });
  } catch (error) {
    res.status(500).json({
      message: "L·ªói khi x√≥a ng∆∞·ªùi d√πng",
      error: error.message,
    });
  }
};

module.exports = { getUsers, addUser, updateUser, deleteUser };
